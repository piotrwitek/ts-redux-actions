// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`async action with any type fetchUsersAsync.failure(
      1
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_FAILURE\\", any>"`;

exports[`async action with any type fetchUsersAsync.request(
      1
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_REQUEST\\", any>"`;

exports[`async action with any type fetchUsersAsync.success([
      1,
    ]) 1`] = `"T.PayloadAction<\\"FETCH_USERS_SUCCESS\\", any[]>"`;

exports[`async action with cancel fetchUsersAsync.cancel(
      'reason'
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_CANCEL\\", string>"`;

exports[`async action with cancel fetchUsersAsync.failure(
      Error('reason')
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_FAILURE\\", Error>"`;

exports[`async action with cancel fetchUsersAsync.request() 1`] = `"T.EmptyAction<\\"FETCH_USERS_REQUEST\\">"`;

exports[`async action with cancel fetchUsersAsync.success([
      { firstName: 'Piotr', lastName: 'Witek' },
    ]) 1`] = `"T.PayloadAction<\\"FETCH_USERS_SUCCESS\\", User[]>"`;

exports[`async action with cancel fn(fetchUsersAsync) 1`] = `"AsyncActionCreator<[\\"FETCH_USERS_REQUEST\\", undefined], [\\"FETCH_USERS_SUCCESS\\", User[]], [\\"FETCH_USERS_FAILURE\\", Error], [\\"FETCH_USERS_CANCEL\\", string]>"`;

exports[`async action with meta fetchUsersAsync.cancel(
      'reason',
      4
    ) 1`] = `"T.PayloadMetaAction<\\"FETCH_USERS_CANCEL\\", string, 4>"`;

exports[`async action with meta fetchUsersAsync.failure(
      Error('reason')
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_FAILURE\\", Error>"`;

exports[`async action with meta fetchUsersAsync.request(
      undefined,
      1
    ) 1`] = `"T.PayloadMetaAction<\\"FETCH_USERS_REQUEST\\", undefined, 1>"`;

exports[`async action with meta fetchUsersAsync.success(
      [{ firstName: 'Piotr', lastName: 'Witek' }],
      2
    ) 1`] = `"T.PayloadMetaAction<\\"FETCH_USERS_SUCCESS\\", User[], 2>"`;

exports[`async action with meta fn(fetchUsersAsync) 1`] = `"AsyncActionCreator<[\\"FETCH_USERS_REQUEST\\", undefined, 1], [\\"FETCH_USERS_SUCCESS\\", User[], 2], [\\"FETCH_USERS_FAILURE\\", Error], [\\"FETCH_USERS_CANCEL\\", string, 4]>"`;

exports[`async action with meta without cancel fetchUsersAsync.cancel 1`] = `"Property 'cancel' does not exist on type 'AsyncActionCreatorWithoutCancel<[\\"FETCH_USERS_REQUEST\\", undefined, 1], [\\"FETCH_USERS_SUCCESS\\", User[], 2], [\\"FETCH_USERS_FAILURE\\", Error]>'."`;

exports[`async action with meta without cancel fetchUsersAsync.failure(
      Error('reason')
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_FAILURE\\", Error>"`;

exports[`async action with meta without cancel fetchUsersAsync.request(
      undefined,
      1
    ) 1`] = `"T.PayloadMetaAction<\\"FETCH_USERS_REQUEST\\", undefined, 1>"`;

exports[`async action with meta without cancel fetchUsersAsync.success(
      [{ firstName: 'Piotr', lastName: 'Witek' }],
      2
    ) 1`] = `"T.PayloadMetaAction<\\"FETCH_USERS_SUCCESS\\", User[], 2>"`;

exports[`async action with meta without cancel fn(fetchUsersAsync) 1`] = `"{ request: T.PayloadMetaAC<\\"FETCH_USERS_REQUEST\\", undefined, 1>; success: T.PayloadMetaAC<\\"FETCH_USERS_SUCCESS\\", User[], 2>; failure: T.PayloadAC<\\"FETCH_USERS_FAILURE\\", Error>; }"`;

exports[`async action with undefined type fetchUsersAsync.cancel 1`] = `"Property 'cancel' does not exist on type 'AsyncActionCreatorWithoutCancel<[\\"FETCH_USERS_REQUEST\\", undefined], [\\"FETCH_USERS_SUCCESS\\", User[]], [\\"FETCH_USERS_FAILURE\\", Error]>'."`;

exports[`async action with undefined type fetchUsersAsync.failure(
      Error('reason')
    ) 1`] = `"T.PayloadAction<\\"FETCH_USERS_FAILURE\\", Error>"`;

exports[`async action with undefined type fetchUsersAsync.request() 1`] = `"T.EmptyAction<\\"FETCH_USERS_REQUEST\\">"`;

exports[`async action with undefined type fetchUsersAsync.success([
      { firstName: 'Piotr', lastName: 'Witek' },
    ]) 1`] = `"T.PayloadAction<\\"FETCH_USERS_SUCCESS\\", User[]>"`;

exports[`async action with undefined type fn(fetchUsersAsync) 1`] = `"{ request: T.EmptyAC<\\"FETCH_USERS_REQUEST\\">; success: T.PayloadAC<\\"FETCH_USERS_SUCCESS\\", User[]>; failure: T.PayloadAC<\\"FETCH_USERS_FAILURE\\", Error>; }"`;
